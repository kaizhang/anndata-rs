name: Continuous integration

on: [push, pull_request]

jobs:
  test_rust_code:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - name: Cache rust build
      uses: Swatinem/rust-cache@v2

    - name: Test Rust package
      run: |
        cd ${GITHUB_WORKSPACE}/anndata-hdf5 && cargo test --no-fail-fast
        cd ${GITHUB_WORKSPACE}/anndata && cargo test --no-fail-fast
        cd ${GITHUB_WORKSPACE}/anndata-test-utils && cargo test --no-fail-fast

    - name: benchmark
      run: |
        cd ${GITHUB_WORKSPACE}/anndata-test-utils && cargo bench
        cd ${GITHUB_WORKSPACE}

    - uses: actions/upload-artifact@v4
      with:
        name: benchmark
        path: target/criterion
 
  test_python_code:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        anndata_version: ['0.9.*', '0.10.*', '0.11.*', '0.12.*']
    steps:
    - uses: actions/checkout@v3

    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - name: Cache rust build
      uses: Swatinem/rust-cache@v2

    - name: Build and test package
      run: |
        pip install --user --upgrade pip
        cd ${GITHUB_WORKSPACE}/python
        pip install --user .[test] anndata==${{ matrix.anndata_version }}
        pytest -v --durations=0 ${GITHUB_WORKSPACE}/python/tests

  build_doc:
    runs-on: ubuntu-latest
    needs: [test_python_code]
    steps:
    - uses: actions/checkout@v3

    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - name: Cache rust build
      uses: Swatinem/rust-cache@v2

    - name: Install dependency
      run: |
        pip install --user --upgrade pip
        pip install --user Pygments sphinx==8.* pandoc nbsphinx \
          sphinx-autodoc-typehints sphinx_rtd_theme \
          markupsafe

    - name: Build package
      run: cd ${GITHUB_WORKSPACE}/python && pip install --user .

    - name: Build doc
      run: |
        cd ${GITHUB_WORKSPACE}
        sphinx-build ${GITHUB_WORKSPACE}/python/docs _build/html

    - name: Upload doc
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: ./_build/html

  upload_gh-page:
    name: Publish
    runs-on: ubuntu-latest
    needs: [build_doc]
    steps:
    - name: Download
      uses: actions/download-artifact@v4

    - name: Upload doc
      uses: peaceiris/actions-gh-pages@v4
      if: ${{ github.ref == 'refs/heads/main' }}
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./documentation
        publish_branch: gh-pages
        force_orphan: true